from src.behavior_model import load_model
from src.preprocessing import preprocess_data
from src.feature_extractor import extract_features
import pandas as pd
import os

def make_predictions(model, file_path, target_column):
    """
    Make predictions on new data using the trained model.
    """
    try:
        # Check if the file exists
        if not os.path.exists(file_path):
            raise FileNotFoundError(f"The file '{file_path}' does not exist.")
        
        # Preprocess the data
        X_train, X_test, y_train, y_test = preprocess_data(file_path, target_column)
        
        # Extract features from the test data
        X_test_features = extract_features(X_test)
        
        # Make predictions
        y_pred = model.predict(X_test_features)
        
        # Save predictions to a DataFrame
        predictions = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
        print(predictions.head())  # Display the first few predictions
        
        # Save predictions to a CSV file
        predictions.to_csv('predictions.csv', index=False)
        print("Predictions saved to 'predictions.csv'")
    
    except Exception as e:
        print(f"An error occurred during prediction: {e}")

def main():
    """
    Load the trained model and make predictions on new data.
    """
    try:
        # Load the trained model
        model_path = 'saved_models/behavior_model.pkl'
        model = load_model(model_path)
        print(f"Model loaded from {model_path}")
        
        # Define the path to the new data
        file_path = 'user_activity_data.csv'  # Replace with actual file path
        target_column = 'is_suspicious'  # Replace with the actual target column name in your dataset
        
        # Make predictions
        make_predictions(model, file_path, target_column)
    
    except Exception as e:
        print(f"An error occurred in the main function: {e}")

if __name__ == "__main__":
    main()
